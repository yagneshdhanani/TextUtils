{"version":3,"sources":["config/color.js","components/CustomBadge.js","components/NavBar.js","components/CustomButton.js","components/TextForm.js","components/CustomAlert.js","App.js","index.js"],"names":["module","exports","type","name","color","backgroundColor","CustomBadge","txt","setMode","textType","className","onClick","NavBar","title","mode","clrObj","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","CustomButton","text","TextForm","heading","showAlert","useState","setText","style","value","onChange","e","target","rows","placeholder","newText","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","arr","trim","split","str","forEach","ar","reverse","join","filter","a","length","toFixed","CustomAlert","alert","role","message","defaultProps","App","setAlert","setTimeout","colorArr","find","cl","useEffect","body","ReactDOM","render","StrictMode"],"mappings":"wFAmDAA,EAAOC,QAnDU,CACf,CACEC,KAAM,UACNC,KAAM,OACNC,MAAO,UACPC,gBAAiB,WAEnB,CACEH,KAAM,YACNC,KAAM,OACNC,MAAO,UACPC,gBAAiB,WAEnB,CACEH,KAAM,UACNE,MAAO,UACPD,KAAM,QACNE,gBAAiB,WAEnB,CACEH,KAAM,SACNE,MAAO,UACPD,KAAM,MACNE,gBAAiB,WAEnB,CACEH,KAAM,UACNE,MAAO,UACPD,KAAM,SACNE,gBAAiB,WAEnB,CACEH,KAAM,OACNE,MAAO,UACPD,KAAM,WACNE,gBAAiB,WAEnB,CACEH,KAAM,OACNE,MAAO,UACPD,KAAM,OACNE,gBAAiB,WAEnB,CACEH,KAAM,QACNE,MAAO,UACPD,KAAM,QACNE,gBAAiB,a,oJC7CN,SAASC,EAAT,GAAwD,IAAjCJ,EAAgC,EAAhCA,KAAMK,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACxD,OACE,sBACEC,UAAS,mBAAcR,EAAd,uBAAiCO,GAC1CE,QAAS,kBAAMH,EAAQN,IAFzB,SAIGK,I,4BCDQ,SAASK,EAAT,GAAmD,IAAjCC,EAAgC,EAAhCA,MAAaL,GAAmB,EAAzBM,KAAyB,EAAnBN,SAAmB,EAAVO,OAGrD,OACE,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKC,GAAG,OAAOC,QAAQ,OAAvD,SACE,eAACC,EAAA,EAAD,WACE,cAACL,EAAA,EAAOM,MAAR,CAAcC,KAAK,IAAnB,SAAwBV,IACxB,cAACG,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,0BAC7B,eAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,wBAApB,UACE,eAACC,EAAA,EAAD,CAAKlB,UAAU,UAAf,UACE,cAACkB,EAAA,EAAIC,KAAL,CAAUN,KAAK,IAAf,kBACA,cAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,IAAf,sBAGF,cAACjB,EAAD,CAAaJ,KAAK,UAAUM,QAASA,EAASD,IAAI,SAClD,cAACD,EAAD,CAAaJ,KAAK,YAAYM,QAASA,EAASD,IAAI,SACpD,cAACD,EAAD,CAAaJ,KAAK,UAAUM,QAASA,EAASD,IAAI,UAClD,cAACD,EAAD,CAAaJ,KAAK,SAASM,QAASA,EAASD,IAAI,QACjD,cAACD,EAAD,CAAaJ,KAAK,UAAUM,QAASA,EAASD,IAAI,WAClD,cAACD,EAAD,CAAaJ,KAAK,OAAOM,QAASA,EAASD,IAAI,aAC/C,cAACD,EAAD,CACEJ,KAAK,QACLM,QAASA,EACTD,IAAI,QACJE,SAAS,cAEX,cAACH,EAAD,CAAaJ,KAAK,OAAOM,QAASA,EAASD,IAAI,iBC/B1C,SAASuB,EAAT,GAA0C,IAAlBnB,EAAiB,EAAjBA,QAASoB,EAAQ,EAARA,KAC9C,OACE,wBACE7B,KAAK,SACLQ,UAAU,4BACVC,QAASA,EAHX,SAKGoB,ICLQ,SAASC,EAAT,GAAyD,IAArCC,EAAoC,EAApCA,QAASnB,EAA2B,EAA3BA,KAAMoB,EAAqB,EAArBA,UAAWnB,EAAU,EAAVA,OAAU,EAC7CoB,mBAAS,IADoC,mBAC9DJ,EAD8D,KACxDK,EADwD,KAgErE,OACE,sBACE1B,UAAU,iBACV2B,MAAO,CAAEjC,MAAgB,UAATU,EAAmB,QAAU,SAF/C,UAIE,+BACE,sBAAKJ,UAAU,OAAf,UACE,6BAAKuB,IAEL,0BACEvB,UAAU,eACViB,GAAG,UACHW,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOJ,EAAQI,EAAEC,OAAOH,QAClCI,KAAM,EACNL,MAAO,CACLhC,gBAAgB,GAAD,OAAKU,EAAOX,OAC3BA,MAAgB,UAATU,EAAmB,QAAU,SAEtC6B,YAAY,6BAKlB,cAACb,EAAD,CAAcnB,QArFQ,WACxB,IAAIiC,EAAUb,EAAKc,cACnBT,EAAQQ,GACRV,EAAU,0BAA2B,YAkFOH,KAAK,yBAC/C,cAACD,EAAD,CAAcnB,QAhFQ,WACxB,IAAIiC,EAAUb,EAAKe,cACnBV,EAAQQ,GACRV,EAAU,yBAA0B,YA6EQH,KAAK,yBAC/C,cAACD,EAAD,CAAcnB,QA3EC,WACjB,IAAIJ,EAAMwC,SAASC,eAAe,WAClCzC,EAAI0C,SACJC,UAAUC,UAAUC,UAAU7C,EAAI+B,OAClCJ,EAAU,sBAAuB,YAuEIH,KAAK,cACxC,cAACD,EAAD,CAAcnB,QArES,WACzB,IAAI0C,EAAMtB,EAAKuB,OAAOC,MAAM,KACxBC,EAAM,GACVH,EAAII,SAAQ,SAACC,GACXF,GAAOE,EAAGH,MAAM,IAAII,UAAUC,KAAK,IAAM,OAG3CxB,EAAQoB,EAAIF,QACZpB,EAAU,+BAAgC,YA6DGH,KAAK,sBAChD,cAACD,EAAD,CAAcnB,QA3DU,WAC1B,IAAI0C,EAAMtB,EAAKuB,OAAOC,MAAM,IAC5BnB,EAAQiB,EAAIM,UAAUC,KAAK,KAC3B1B,EAAU,4BAA6B,YAwDOH,KAAK,mBACjD,cAACD,EAAD,CAAcnB,QAtDM,WACtB,IAAI0C,EAAMtB,EAAKuB,OAAOC,MAAM,KACxBC,EAAM,GACVH,EAAII,SAAQ,SAACC,IACXA,EAAKA,EAAGH,MAAM,KACX,GAAKG,EAAG,GAAGb,cACdW,GAAOE,EAAGE,KAAK,IAAM,OAGvBxB,EAAQoB,EAAIF,QACZpB,EAAU,4BAA6B,YA4CGH,KAAK,qBAC7C,cAACD,EAAD,CAAcnB,QA1CQ,WACxB,IAAIiC,EAAUb,EAAKwB,MAAM,QACzBnB,EAAQQ,EAAQgB,KAAK,MACrB1B,EAAU,iCAAkC,YAuCAH,KAAK,wBAC/C,cAACD,EAAD,CAAcnB,QArCI,WACpByB,EAAQ,IAERF,EAAU,yBAA0B,WAkCIH,KAAK,oBAE3C,oBAAIrB,UAAU,OAAd,0BACA,8BACE,4BAAIqB,EAAKwB,MAAM,KAAKM,QAAO,SAACC,GAAD,MAAa,KAANA,KAAUC,SAD9C,WACkE,IAChE,4BAAIhC,EAAKgC,SAFX,gBAIA,8BACE,6BACqD,KAAjDhC,EAAKwB,MAAM,KAAKM,QAAO,SAACC,GAAD,MAAa,KAANA,KAAUC,QAAgBC,QAAQ,KAC/D,IAHP,qBAMA,yCACA,4BACGjC,EAAKgC,OAAS,EACXhC,EACA,wDClHG,SAASkC,EAAT,GAAiC,IAAVC,EAAS,EAATA,MACpC,OACEA,GACE,qBACExD,UAAS,sBAAiBwD,EAAMhE,KAAvB,gCACTiE,KAAK,QAFP,SAIE,iCAASD,EAAME,YHmCvBxD,EAAOyD,aAAe,CACpBxD,MAAO,oB,qBIgBMyD,MAlDf,WAAgB,IAAD,EACWnC,mBAAS,SADpB,mBACNrB,EADM,KACAN,EADA,OAEa2B,mBAAS,MAFtB,mBAEN+B,EAFM,KAECK,EAFD,KAIPrC,EAAY,SAACkC,EAASlE,GAC1BqE,EAAS,CACPH,UACAlE,SAEFsE,YAAW,WACTD,EAAS,QACR,MAGCxD,EAAS0D,IAASC,MAAK,SAACC,GAAD,OAAQA,EAAGzE,OAASY,KAWjD,OALA8D,qBAAU,WAHR7B,SAAS8B,KAAKxC,MAAMhC,gBAAkBU,EAAOX,MAC7C8B,EAAU,GAAD,OAAInB,EAAOZ,KAAX,2BAA0C,aAKlD,CAACW,IAGF,qCACE,cAACF,EAAD,CAAQE,KAAMA,EAAMN,QAASA,EAASO,OAAQA,EAAQF,MAAM,cAC5D,cAACoD,EAAD,CAAaC,MAAOA,IAMpB,cAAClC,EAAD,CACEC,QAAQ,kCACRnB,KAAMA,EACNoB,UAAWA,EACXnB,OAAQA,Q,MC3ChB+D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASC,eAAe,W","file":"static/js/main.bec25bb2.chunk.js","sourcesContent":["const colorArr = [\r\n  {\r\n    type: \"primary\",\r\n    name: \"Blue\",\r\n    color: \"#112f82\",\r\n    backgroundColor: \"#051c42\",\r\n  },\r\n  {\r\n    type: \"secondary\",\r\n    name: \"Gray\",\r\n    color: \"#5e6161\",\r\n    backgroundColor: \"#434444\",\r\n  },\r\n  {\r\n    type: \"success\",\r\n    color: \"#1f502a\",\r\n    name: \"Green\",\r\n    backgroundColor: \"#092403\",\r\n  },\r\n  {\r\n    type: \"danger\",\r\n    color: \"#992124\",\r\n    name: \"Red\",\r\n    backgroundColor: \"#64080a\",\r\n  },\r\n  {\r\n    type: \"warning\",\r\n    color: \"#d3cd17\",\r\n    name: \"Yellow\",\r\n    backgroundColor: \"#a39e0a\",\r\n  },\r\n  {\r\n    type: \"info\",\r\n    color: \"#1dcbdb\",\r\n    name: \"Sky Blue\",\r\n    backgroundColor: \"#0a96a3\",\r\n  },\r\n  {\r\n    type: \"dark\",\r\n    color: \"#383838\",\r\n    name: \"Dark\",\r\n    backgroundColor: \"#141414\",\r\n  },\r\n  {\r\n    type: \"light\",\r\n    color: \"#d6e3da\",\r\n    name: \"Light\",\r\n    backgroundColor: \"#c1c1c1\",\r\n  },\r\n];\r\n\r\nmodule.exports = colorArr;\r\n","import React from \"react\";\r\n\r\nexport default function CustomBadge({ type, txt, setMode, textType }) {\r\n  return (\r\n    <span\r\n      className={`badge bg-${type} pill-style ${textType}`}\r\n      onClick={() => setMode(type)}\r\n    >\r\n      {txt}\r\n    </span>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import { Link } from \"react-router-dom\";\r\nimport CustomBadge from \"./CustomBadge\";\r\nimport { Container, Nav, Navbar } from \"react-bootstrap\";\r\n\r\nexport default function NavBar({ title, mode, setMode, clrObj }) {\r\n  // const variant = mode === \"info\" || mode === \"light\" ? \"light\" : \"dark\";\r\n\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Container>\r\n        <Navbar.Brand href=\"#\">{title}</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"#\">Home</Nav.Link>\r\n            <Nav.Link href=\"#\">About</Nav.Link>\r\n          </Nav>\r\n\r\n          <CustomBadge type=\"primary\" setMode={setMode} txt=\"Blue\" />\r\n          <CustomBadge type=\"secondary\" setMode={setMode} txt=\"Gray\" />\r\n          <CustomBadge type=\"success\" setMode={setMode} txt=\"Green\" />\r\n          <CustomBadge type=\"danger\" setMode={setMode} txt=\"Red\" />\r\n          <CustomBadge type=\"warning\" setMode={setMode} txt=\"Yellow\" />\r\n          <CustomBadge type=\"info\" setMode={setMode} txt=\"Sky Blue\" />\r\n          <CustomBadge\r\n            type=\"light\"\r\n            setMode={setMode}\r\n            txt=\"Light\"\r\n            textType=\"text-dark\"\r\n          />\r\n          <CustomBadge type=\"dark\" setMode={setMode} txt=\"Dark\" />\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  title: \"Place title here\",\r\n};\r\n\r\n// Dark Mode Options\r\n\r\n/* <Form.Check\r\n              type=\"switch\"\r\n              id=\"custom-switch\"\r\n              onClick={toggleMode}\r\n              className={`text-${mode === \"dark\" ? \"light\" : \"dark\"}`}\r\n              label={mode === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\r\n            /> */\r\n\r\n/* <Button\r\n            variant={\"primary\"}\r\n            onClick={toggleMode}\r\n            className={`text-${mode === \"dark\" ? \"light\" : \"dark\"}`}\r\n          >\r\n            {mode === \"light\" ? \"Dark Mode\" : \"Light Mode\"}\r\n          </Button> */\r\n","import React from \"react\";\r\n\r\nexport default function CustomButton({ onClick, text }) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn btn-primary btn-style\"\r\n      onClick={onClick}\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nimport CustomButton from \"./CustomButton\";\r\n\r\nexport default function TextForm({ heading, mode, showAlert, clrObj }) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  const handleOnUppercase = () => {\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    showAlert(\"Converted to UpperCase!\", \"success\");\r\n  };\r\n\r\n  const handleOnLowercase = () => {\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    showAlert(\"Converted to LoweCase!\", \"success\");\r\n  };\r\n\r\n  const handleCopy = () => {\r\n    let txt = document.getElementById(\"txtArea\");\r\n    txt.select();\r\n    navigator.clipboard.writeText(txt.value);\r\n    showAlert(\"Copied to clipboard\", \"success\");\r\n  };\r\n\r\n  const handleWordsReverse = () => {\r\n    let arr = text.trim().split(\" \");\r\n    let str = \"\";\r\n    arr.forEach((ar) => {\r\n      str += ar.split(\"\").reverse().join(\"\") + \" \";\r\n    });\r\n\r\n    setText(str.trim());\r\n    showAlert(\"All words has been reversed!\", \"success\");\r\n  };\r\n\r\n  const handleStringReverse = () => {\r\n    let arr = text.trim().split(\"\");\r\n    setText(arr.reverse().join(\"\"));\r\n    showAlert(\"String has been reversed!\", \"success\");\r\n  };\r\n\r\n  const handleOnCapital = () => {\r\n    let arr = text.trim().split(\" \");\r\n    let str = \"\";\r\n    arr.forEach((ar) => {\r\n      ar = ar.split(\"\");\r\n      ar[0] = ar[0].toUpperCase();\r\n      str += ar.join(\"\") + \" \";\r\n    });\r\n\r\n    setText(str.trim());\r\n    showAlert(\"First latter capitalized!\", \"success\");\r\n  };\r\n\r\n  const handleExtraSpaces = () => {\r\n    let newText = text.split(/[ ]+/);\r\n    setText(newText.join(\" \"));\r\n    showAlert(\"Extra spaces has been removed!\", \"success\");\r\n  };\r\n\r\n  const handleOnClear = () => {\r\n    setText(\"\");\r\n\r\n    showAlert(\"Text has been cleared!\", \"danger\");\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"container my-3\"\r\n      style={{ color: mode === \"light\" ? \"black\" : \"white\" }}\r\n    >\r\n      <form>\r\n        <div className=\"mb-3\">\r\n          <h1>{heading}</h1>\r\n\r\n          <textarea\r\n            className=\"form-control\"\r\n            id=\"txtArea\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            rows={8}\r\n            style={{\r\n              backgroundColor: `${clrObj.color}`,\r\n              color: mode === \"light\" ? \"black\" : \"white\",\r\n            }}\r\n            placeholder=\"Enter text here ...\"\r\n          ></textarea>\r\n        </div>\r\n      </form>\r\n\r\n      <CustomButton onClick={handleOnUppercase} text=\"Convert to Uppercase\" />\r\n      <CustomButton onClick={handleOnLowercase} text=\"Convert to LowerCase\" />\r\n      <CustomButton onClick={handleCopy} text=\"Copy Text\" />\r\n      <CustomButton onClick={handleWordsReverse} text=\"Reverse all Words\" />\r\n      <CustomButton onClick={handleStringReverse} text=\"Reverse String\" />\r\n      <CustomButton onClick={handleOnCapital} text=\"Capitalize Words\" />\r\n      <CustomButton onClick={handleExtraSpaces} text=\"Remove extra spaces\" />\r\n      <CustomButton onClick={handleOnClear} text=\"Clear all words\" />\r\n\r\n      <h2 className=\"my-3\">Text Summary</h2>\r\n      <p>\r\n        <b>{text.split(\" \").filter((a) => a !== \"\").length}</b> words &{\" \"}\r\n        <b>{text.length}</b> character\r\n      </p>\r\n      <p>\r\n        <b>\r\n          {(text.split(\" \").filter((a) => a !== \"\").length * 0.008).toFixed(3)}\r\n        </b>{\" \"}\r\n        minutes to read\r\n      </p>\r\n      <h2>Preview</h2>\r\n      <p>\r\n        {text.length > 0\r\n          ? text\r\n          : \"Enter text in the above textbox to preview here.\"}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CustomAlert({ alert }) {\r\n  return (\r\n    alert && (\r\n      <div\r\n        className={`alert alert-${alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{alert.message}</strong>\r\n      </div>\r\n    )\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport NavBar from \"./components/NavBar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\nimport CustomAlert from \"./components/CustomAlert\";\n\nimport colorArr from \"./config/color\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      message,\n      type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n\n  const clrObj = colorArr.find((cl) => cl.type === mode);\n\n  const toggleMode = () => {\n    document.body.style.backgroundColor = clrObj.color;\n    showAlert(`${clrObj.name} Mode has been enabled!`, \"success\");\n  };\n  useEffect(() => {\n    toggleMode();\n    // eslint-disable-next-line\n  }, [mode]);\n\n  return (\n    <>\n      <NavBar mode={mode} setMode={setMode} clrObj={clrObj} title=\"TextUtils\" />\n      <CustomAlert alert={alert} />\n      {/* <Routes>\n        <Route\n          exact\n          path=\"/\"\n          element={ */}\n      <TextForm\n        heading=\"Enter the text to analyze below\"\n        mode={mode}\n        showAlert={showAlert}\n        clrObj={clrObj}\n      />\n      {/* }\n        />\n        <Route exact path=\"/about\" element={<About />} />\n\n        <Route path=\"*\" element={<NotFound />} /> */}\n      {/* </Routes> */}\n    </>\n  );\n}\n\nexport default App;\n\n// if (mode === \"light\") {\n// setMode(\"dark\");\n//   document.body.style.backgroundColor = \"#042743\";\n//   showAlert(\"Dark Mode has been enabled!\", \"success\");\n// } else {\n//   document.body.style.backgroundColor = \"white\";\n// setMode(\"light\");\n//   showAlert(\"Light Mode has been enabled!\", \"success\");\n// }\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}